# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import sis_pb2 as sis__pb2


class SISSyncStub(object):
    """SIS Sync service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SyncPersons = channel.unary_stream(
                '/eduapi.async.SISSync/SyncPersons',
                request_serializer=sis__pb2.SyncRequest.SerializeToString,
                response_deserializer=sis__pb2.SyncEvent.FromString,
                )
        self.SyncCourses = channel.unary_stream(
                '/eduapi.async.SISSync/SyncCourses',
                request_serializer=sis__pb2.SyncRequest.SerializeToString,
                response_deserializer=sis__pb2.SyncEvent.FromString,
                )


class SISSyncServicer(object):
    """SIS Sync service definition
    """

    def SyncPersons(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncCourses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SISSyncServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SyncPersons': grpc.unary_stream_rpc_method_handler(
                    servicer.SyncPersons,
                    request_deserializer=sis__pb2.SyncRequest.FromString,
                    response_serializer=sis__pb2.SyncEvent.SerializeToString,
            ),
            'SyncCourses': grpc.unary_stream_rpc_method_handler(
                    servicer.SyncCourses,
                    request_deserializer=sis__pb2.SyncRequest.FromString,
                    response_serializer=sis__pb2.SyncEvent.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'eduapi.async.SISSync', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SISSync(object):
    """SIS Sync service definition
    """

    @staticmethod
    def SyncPersons(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/eduapi.async.SISSync/SyncPersons',
            sis__pb2.SyncRequest.SerializeToString,
            sis__pb2.SyncEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncCourses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/eduapi.async.SISSync/SyncCourses',
            sis__pb2.SyncRequest.SerializeToString,
            sis__pb2.SyncEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
